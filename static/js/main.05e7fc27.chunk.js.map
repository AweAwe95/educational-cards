{"version":3,"sources":["api/api.ts","redux/app-reducer.ts","redux/authorization-reducer.ts","components/Header/Header.tsx","components/Loader/Loader.tsx","components/Main/Authorization/AuthorizationForm/AuthorizationForm.tsx","components/Main/Authorization/Authorization.tsx","redux/registration-reducer.ts","components/Main/Registration/RegistrationForm/RegistrationForm.tsx","components/Main/Registration/Registration.tsx","components/Main/Profile/Profile.tsx","components/Main/PageNotFound/PageNotFound.tsx","redux/recoveryPassword-reducer.ts","components/Main/RecoveryPassword/RecoveryPasswordForm/RecoveryPasswordForm.tsx","components/Main/RecoveryPassword/RecoveryPassword.tsx","components/Main/NewPassword/NewPasswordForm/NewPasswordForm.tsx","components/Main/NewPassword/NewPassword.tsx","redux/Packs/packs-filter-reducer.ts","components/FilterComponents/IncreaseDecriase/IncreaseDecreaseFilter.tsx","components/FilterComponents/IncreaseDecriase/IncreaseDecreaseFilterContainer.tsx","components/Main/CardPacks/CardPacksTableBody.tsx","components/FilterComponents/Pagination/SelectForPagination.tsx","components/FilterComponents/Pagination/Pagination.tsx","components/FilterComponents/SearchInput/SearchInput.tsx","components/FilterComponents/RangeFilter/RangeFilter.tsx","redux/cardPacks-reducer.ts","redux/cards-reducer.ts","components/Main/CardPacks/CardPacksTable.tsx","components/Main/CardPacks/CardPacks.tsx","components/Main/Cards/CardsTable.tsx","components/Main/Cards/Cards.tsx","components/Main/Cards/CardsTableBody.tsx","App.tsx","reportWebVitals.ts","redux/profile-reducer.ts","redux/store.ts","index.tsx","components/FilterComponents/Pagination/Paginator.module.css","components/FilterComponents/Pagination/SelectForPagination.module.css","components/FilterComponents/RangeFilter/RangeFilter.module.css"],"names":["instance","axios","create","baseURL","withCredentials","api","email","password","post","from","message","resetPasswordToken","data","then","res","delete","packName","min","max","page","pageCount","sortPacks","get","params","name","cardsPack","id","packsId","initialState","isLoading","setLoaderAC","type","isLoggedIn","authError","loginAC","isLoggedInAC","setAuthErrorAC","Header","useSelector","state","authorization","app","dispatch","useDispatch","className","to","onClick","catch","finally","disabled","Loader","AuthorizationForm","authorizationError","formik","useFormik","initialValues","rememberMe","validate","values","errors","test","length","onSubmit","userData","handleSubmit","htmlFor","placeholder","getFieldProps","onFocus","touched","style","color","Authorization","isReg","regError","regUserAC","setRegErrorAC","RegistrationForm","registrationError","registration","Registration","Profile","authData","created","updated","PageNotFound","isPasRec","recPassError","isPassRecAC","setRecPassErrorAC","RecoveryPasswordForm","recoveryPassword","token","recPassTC","autoFocus","RecoveryPassword","NewPasswordForm","serverToken","useParams","NewPassword","firstNumber","secondDescription","totalCountPage","setPackName","setSecondDescriptionSort","IncreaseDecreaseFilter","props","direction","buttonDescription","IncreaseDecreaseFilterContainer","CardPacksTableBody","title","i","width","display","render","d","cardsCount","e","target","innerText","user_name","SelectForPaginator","s","selectContainer","onChange","currentTarget","value","selected","Paginator","objForPagination","packFilter","pageCountPagination","Math","ceil","pageCountPaginationArray","push","container","pages","map","index","currentPage","setPage","AddItemForm","React","memo","useState","setTitle","error","setError","addTitle","trim","replace","onKeyPress","charCode","RangeFilter","value1","setValue1","value2","setValue2","rangeContainer","allowCross","minCards","maxCards","cardPacks","_id","user_id","cardPacksTotalCount","maxCardsCount","minCardsCount","getCardPacksTC","getState","console","log","dir","cards","answer","question","cardsPack_id","grade","comments","more_id","rating","shots","__v","cardsTotalCount","maxGrade","minGrade","packUserId","tokenDeathTime","getCardsTC","response","CardPacksTable","model","headerStyle","tableStyle","rowsStyle","rowStyle","newNamePacks","setNewNamePacks","addCardPacks","useCallback","thunk","addCardPacksTC","deleteCardPacks","deleteCardPacksAC","deleteCardPacksTC","margin","flexFlow","alignItems","justifyContent","border","m","dataItem","dataIndex","modelIndex","CardPacks","useEffect","CardsTable","Cards","userId","App","key","isAuthDataEmpty","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","profile","filter","cardPack","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.05e7fc27.chunk.js","sourcesContent":["import axios from 'axios';\nimport {AuthFormikType} from '../components/Main/Authorization/AuthorizationForm/AuthorizationForm';\n\n\nconst instance = axios.create({\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\n    withCredentials: true,\n});\n\nexport const api = {\n    regUser(email: string, password: string) {\n        return instance.post('auth/register', {email, password});\n    },\n    emailUser(email: string, from: string, message: string) {\n        return instance.post('auth/forgot', {email, from, message});\n    },\n    resetUser(password: string, resetPasswordToken: string | undefined) {\n        return instance.post('auth/set-new-password', {password, resetPasswordToken});\n    },\n    login(data: AuthFormikType) {\n        return instance.post<LoginDataType>('auth/login', {...data})\n            .then(res => {\n                return res.data;\n            });\n    },\n    isAuthorized() {\n        return instance.post('auth/me', {});\n    },\n    logout() {\n        return instance.delete('auth/me', {});\n    },\n    getCardPacks(packName: string, min: number, max: number, page: number, pageCount: number, sortPacks: string) {\n        return instance.get<CardPacksResType>('cards/pack/', {\n            params: {packName, min, max, page, pageCount, sortPacks}\n        });\n    },\n    createCardPacks(name: string) {\n        return instance.post<CardPacksResType>('cards/pack', {cardsPack: {name}});\n    },\n    deleteCardPacks(id: string) {\n        return instance.delete<CardPacksResType>(`cards/pack/?id=${id}`);\n    },\n    updateCardPacks(id: string, title: string) {\n        return instance.put<CardPacksResType>(`cards/pack/${id}`, {title});\n    },\n    getCards(packsId: string) {\n        return instance.get<CardsResType>(`cards/card/?cardsPack_id=${packsId}`);\n    },\n    createCard(packsId: string, question: string) {\n        return instance.post(`cards/${packsId}/card`, {question});\n    },\n    deleteCard(packsId: string, cardId: string) {\n        return instance.delete<CardPacksResType>(`cards/${packsId}/card/${cardId}`);\n    },\n    updateCard(packsId: string, cardId: string, question: string) {\n        return instance.put<CardPacksResType>(`cards/${packsId}/card/${cardId}`, {question});\n    }\n};\n\n\nexport type LoginDataType = {\n    created?: string\n    email?: string\n    isAdmin?: boolean\n    name?: string\n    publicCardPacksCount?: number\n    rememberMe?: boolean\n    token?: string\n    tokenDeathTime?: number\n    updated?: string\n    verified?: boolean\n    __v?: number\n    _id?: string\n}\n\nexport type CardPackType = {\n    _id: string\n    user_id: string\n    name: string\n    cardsCount: number\n    created: string\n    updated: string\n    user_name: string\n}\n\nexport type CardPacksResType = {\n    cardPacks: CardPackType[]\n    cardPacksTotalCount: number\n    maxCardsCount: number\n    minCardsCount: number\n    page: number\n    pageCount: number\n}\n\nexport type CardType = {\n    answer: string\n    question: string\n    cardsPack_id: string\n    grade: number\n    comments: string\n    created: string\n    updated: string\n    more_id: string\n    rating: number\n    shots: number\n    type: string\n    user_id: string\n    __v: number\n    _id: string\n}\n\nexport type CardsResType = {\n    cards: CardType[]\n    cardsTotalCount: number\n    maxGrade: number\n    minGrade: number\n    page: number\n    pageCount: number\n    packUserId: number\n    token: string\n    tokenDeathTime: number\n}","\nconst initialState = {\n    isLoading: false\n};\n\nexport const appReducer = (state: AppStateType = initialState, action: ActionsType): AppStateType => {\n    switch (action.type) {\n        case 'APP/SET-LOADING': {\n            return {...state, isLoading: action.isLoading};\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\n\nexport const setLoaderAC = (isLoading: boolean) => ({type: 'APP/SET-LOADING', isLoading} as const)\n\ntype AppStateType = typeof initialState\ntype ActionsType =\n    | ReturnType<typeof setLoaderAC>\n\n","import {AuthFormikType} from '../components/Main/Authorization/AuthorizationForm/AuthorizationForm';\nimport {Dispatch} from 'redux';\nimport {LoginDataType, api} from '../api/api';\nimport {setLoaderAC} from \"./app-reducer\";\n\nconst initialState = {\n    data: {} as LoginDataType,\n    isLoggedIn: false,\n    authError: false\n};\n\nexport const authorizationReducer = (state: AuthStateType = initialState, action: ActionsType): AuthStateType => {\n    switch (action.type) {\n        case 'AUTH/LOGIN': {\n            return {\n                ...state,\n                data: action.data\n            };\n        }\n        case 'AUTH/IS-LOGGED-IN': {\n            return {\n                ...state,\n                isLoggedIn: action.isLoggedIn\n            };\n        }\n        case \"AUTH/SET-AUTH-ERROR\": {\n            return {...state, authError: action.authError}\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\n\nexport const loginAC = (data: LoginDataType) => ({type: 'AUTH/LOGIN', data} as const)\nexport const isLoggedInAC = (isLoggedIn: boolean) => ({type: 'AUTH/IS-LOGGED-IN', isLoggedIn} as const)\nexport const setAuthErrorAC = (authError: boolean) => ({type: 'AUTH/SET-AUTH-ERROR', authError} as const)\n\nexport const loginTC = (data: AuthFormikType) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setLoaderAC(true))\n        api.login(data)\n            .then(userData => {\n                dispatch(loginAC(userData));\n                dispatch(isLoggedInAC(true))\n            })\n            .catch(() => dispatch(setAuthErrorAC(true)))\n            .finally(() => {\n                dispatch(setLoaderAC(false))\n            })\n    };\n};\nexport const isAuthorizedTC = () => {\n    return (dispatch: Dispatch) => {\n        api.isAuthorized()\n            .then(response => {\n                dispatch(loginAC(response.data))\n                dispatch(isLoggedInAC(true))\n            })\n            .catch(() => dispatch(isLoggedInAC(false)))\n    }\n}\nexport const logoutTC = () => {\n    return (dispatch: Dispatch) => {\n        dispatch(setLoaderAC(true))\n        api.logout()\n            .then(() => {\n                dispatch(isLoggedInAC(false))\n                dispatch(loginAC({}))\n            })\n            .catch()\n            .finally(() => {\n                dispatch(setLoaderAC(false))\n            })\n    };\n};\n\n\ntype AuthStateType = typeof initialState\ntype ActionsType =\n    | ReturnType<typeof loginAC>\n    | ReturnType<typeof isLoggedInAC>\n    | ReturnType<typeof setAuthErrorAC>\n","import {NavLink} from \"react-router-dom\";\nimport React from \"react\";\nimport './Header.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../redux/store\";\nimport {logoutTC} from \"../../redux/authorization-reducer\";\n\nexport function Header() {\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.authorization.isLoggedIn);\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.app.isLoading)\n    const dispatch = useDispatch()\n\n    return (\n        <div className=\"header\">\n            <div className=\"header-left\">\n                {(isLoggedIn) ?\n                    <>\n                        <NavLink to=\"/\">Profile</NavLink>\n                        <NavLink to=\"/packs\">Packs</NavLink>\n                        <NavLink to=\"/cards\">Сards</NavLink>\n                    </>\n                    :\n                    <>\n                        <NavLink to=\"/auth\">Authorization</NavLink>\n                        <NavLink to=\"/signup\">Registration</NavLink>\n                        <NavLink to=\"/password-recovery\">Password Recovery</NavLink>\n                    </>\n                }\n            </div>\n            <div className=\"header-right\">\n                {isLoggedIn && <button className=\"logout-button\" onClick={() => dispatch(logoutTC())}\n                                       disabled={isLoading}>Logout</button>}\n            </div>\n        </div>\n    )\n}","import './Loader.css'\n\nexport const Loader = () => {\n    return (\n        <div className={\"loadingContainer\"}>\n            <h2>Loading...</h2>\n            <div className=\"loading\">\n                <div className=\"arc\"></div>\n                <div className=\"arc\"></div>\n                <div className=\"arc\"></div>\n            </div>\n        </div>\n    )\n}","import {useDispatch, useSelector} from 'react-redux';\nimport {useFormik} from 'formik';\nimport {loginTC, setAuthErrorAC} from '../../../../redux/authorization-reducer';\nimport React from \"react\";\nimport {AppRootStateType} from \"../../../../redux/store\";\nimport './AuthorizationForm.css'\nimport {Loader} from \"../../../Loader/Loader\";\n\nexport type AuthFormikType = {\n    email?: string\n    password?: string\n    rememberMe?: boolean\n}\n\nexport const AuthorizationForm = () => {\n    const dispatch = useDispatch();\n    const authorizationError = useSelector<AppRootStateType, boolean>(state => state.authorization.authError)\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.app.isLoading)\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            rememberMe: false,\n        },\n        validate: (values) => {\n            const errors: AuthFormikType = {};\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n            } else if (values.password.length <= 7) {\n                errors.password = 'Password should contain more than 7 symbols';\n            }\n            return errors;\n        },\n        onSubmit: (values) => {\n            dispatch(loginTC(values));\n            // formik.resetForm();\n        }\n    });\n\n    return (\n        <div className=\"authorizationFormContainer\">\n            <form onSubmit={formik.handleSubmit}>\n                <p className=\"authText\">Please fill in this form to login.</p>\n                <label htmlFor=\"email\"><b>Email Address</b></label>\n                <input\n                    type=\"email\"\n                    placeholder={'Enter your Email'}\n                    {...formik.getFieldProps('email')}\n                    onFocus={() => dispatch(setAuthErrorAC(false))}\n                    className={\"authInput\"}\n                />\n                {formik.errors.email && formik.touched.email\n                    ? <span style={{color: 'red'}}>{formik.errors.email}</span>\n                    : null\n                }\n                <label htmlFor=\"password\"><b>Password</b></label>\n                <input\n                    type=\"password\"\n                    placeholder={'Enter your Password'}\n                    {...formik.getFieldProps('password')}\n                    onFocus={() => dispatch(setAuthErrorAC(false))}\n                    className={\"authInput\"}\n                />\n                {formik.errors.password && formik.touched.password\n                    ? <span style={{color: 'red'}}>{formik.errors.password}</span>\n                    : null\n                }\n                <div>\n                    <input type=\"checkbox\"/>\n                    <label htmlFor=\"checkbox\"><b>Remember me</b></label>\n                </div>\n                {isLoading && <Loader/>}\n                <button type={'submit'} className=\"authBtn\" disabled={isLoading}>Login</button>\n            </form>\n            {authorizationError && <h3 className={'authError'}>SOMETHING GOING WRONG</h3>}\n        </div>\n    );\n};\n","import React from \"react\";\nimport {AuthorizationForm} from './AuthorizationForm/AuthorizationForm';\nimport './Authorization.css'\n\nexport function Authorization() {\n\n    return (\n        <div className={'authorizationContainer'}>\n            <AuthorizationForm/>\n        </div>\n    );\n}\n","import {Dispatch} from \"redux\";\nimport {api} from \"../api/api\";\nimport {setLoaderAC} from \"./app-reducer\";\n\nconst initialState = {\n    isReg: false,\n    regError: false\n}\n\nexport const registrationReducer = (state: RegStateType = initialState, action: ActionsType): RegStateType => {\n    switch (action.type) {\n        case \"SIGNUP/REG-USER\": {\n            return {...state, isReg: action.isReg}\n        }\n        case \"SIGNUP/SET-REG-ERROR\": {\n            return {...state, regError: action.regError}\n        }\n        default: {\n            return state\n        }\n    }\n}\n\n\nexport const regUserAC = (isReg: boolean) => ({type: \"SIGNUP/REG-USER\", isReg: isReg} as const)\nexport const setRegErrorAC = (regError: boolean) => ({type: \"SIGNUP/SET-REG-ERROR\", regError} as const)\n\n\nexport const regUserTC = (email: string, password: string) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setLoaderAC(true))\n        api.regUser(email, password)\n            .then(() => dispatch(regUserAC(true)))\n            .catch(() => dispatch(setRegErrorAC(true)))\n            .finally(() => {\n                dispatch(regUserAC(false))\n                dispatch(setLoaderAC(false))\n            })\n    }\n}\n\n\ntype RegStateType = typeof initialState\ntype ActionsType =\n    | ReturnType<typeof regUserAC>\n    | ReturnType<typeof setRegErrorAC>","import React from 'react';\nimport {useFormik} from 'formik';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {regUserTC, setRegErrorAC} from \"../../../../redux/registration-reducer\";\nimport \"./RegistrationForm.css\"\nimport {AppRootStateType} from \"../../../../redux/store\";\nimport {AuthFormikType} from \"../../Authorization/AuthorizationForm/AuthorizationForm\";\nimport {Loader} from \"../../../Loader/Loader\";\n\nexport const RegistrationForm = () => {\n        const dispatch = useDispatch()\n        const registrationError = useSelector<AppRootStateType, boolean>(state => state.registration.regError)\n        const isLoading = useSelector<AppRootStateType, boolean>(state => state.app.isLoading)\n\n        const formik = useFormik({\n            initialValues: {\n                email: '',\n                password: '',\n            },\n            validate: (values) => {\n                const errors: AuthFormikType = {};\n                if (!values.email) {\n                    errors.email = 'Required';\n                } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                    errors.email = 'Invalid email address';\n                } else if (values.password.length <= 7) {\n                    errors.password = 'Password should contain more than 7 symbols';\n                }\n                return errors;\n            },\n            onSubmit: values => {\n                dispatch(regUserTC(values.email, values.password))\n            },\n        });\n\n        return (\n            <div className=\"registrationFormContainer\">\n                <form onSubmit={formik.handleSubmit}>\n                    <p className=\"registerText\">Please fill in this form to create an account.</p>\n                    <label htmlFor={\"email\"}><b>Email Address</b></label>\n                    <input\n                        type=\"email\"\n                        placeholder=\"Enter your Email\"\n                        {...formik.getFieldProps('email')}\n                        onFocus={() => dispatch(setRegErrorAC(false))}\n                        className=\"registerInput\"\n                    />\n                    {formik.errors.email && formik.touched.email\n                        ? <div style={{color: 'red'}}>{formik.errors.email}</div>\n                        : null\n                    }\n                    <br/>\n                    <label htmlFor=\"password\"><b>Password</b></label>\n                    <input\n                        type=\"password\"\n                        placeholder=\"Enter your Password\"\n                        {...formik.getFieldProps('password')}\n                        onFocus={() => dispatch(setRegErrorAC(false))}\n                        className=\"registerInput\"\n                    />\n                    {formik.errors.password && formik.touched.password\n                        ? <div style={{color: 'red'}}>{formik.errors.password}</div>\n                        : null\n                    }\n                    {isLoading && <Loader/>}\n                    <button type={\"submit\"} className=\"registerBtn\" disabled={isLoading}>Submit</button>\n                </form>\n                {registrationError && <h3 className={'regError'}>SOMETHING GOING WRONG</h3>}\n            </div>\n        );\n    }\n;","import React from \"react\";\nimport {RegistrationForm} from \"./RegistrationForm/RegistrationForm\";\nimport \"./Registration.css\"\nimport {Navigate} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../redux/store\";\n\nexport function Registration() {\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.registration.isReg)\n\n    if (isRegistered) {\n        return <Navigate to={'/auth'}/>\n    }\n    return (\n        <div className={\"registrationContainer\"}>\n            <RegistrationForm/>\n        </div>\n    )\n}","import {useSelector} from 'react-redux';\nimport {LoginDataType} from '../../../api/api';\nimport {AppRootStateType} from '../../../redux/store';\nimport {Loader} from \"../../Loader/Loader\";\n\nexport function Profile() {\n    const authData = useSelector<AppRootStateType, LoginDataType>(state => state.authorization.data);\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.app.isLoading)\n\n    return (\n        <div>\n            {isLoading && <Loader/>}\n            <div>{authData.name}</div>\n            <div>{authData.created}</div>\n            <div>{authData.updated}</div>\n        </div>\n    );\n}","export function PageNotFound() {\n    return (\n        <div>\n            <h1>Page Not Found</h1>\n        </div>\n    )\n}","import {Dispatch} from \"redux\";\nimport {api} from \"../api/api\";\nimport {setLoaderAC} from \"./app-reducer\";\n\nconst initialState = {\n    email: \"\",\n    isPasRec: false,\n    from: \"ai73a@yandex.by\",\n    message: `<div style=\"background-color: lime; padding: 15px\"> password recovery link: <a href='http://localhost:3000/new-password/$token$'> link</a></div>`,\n    recPassError: false\n}\n\nexport const recoveryPasswordReducer = (state: RecPassStateType = initialState, action: ActionsType): RecPassStateType => {\n    switch (action.type) {\n        case \"RECOVERY/REC-PASS\": {\n            return {...state, email: action.email}\n        }\n        case \"RECOVERY/IS-PASS-REC\": {\n            return {...state, isPasRec: action.isPasRec}\n        }\n        case \"RECOVERY/SET-REC-PASS-ERROR\": {\n            return {...state, recPassError: action.recPassError}\n        }\n        default: {\n            return state\n        }\n    }\n}\n\n\nexport const recPassAC = (email: string) => ({type: \"RECOVERY/REC-PASS\", email} as const)\nexport const isPassRecAC = (isPasRec: boolean) => ({type: \"RECOVERY/IS-PASS-REC\", isPasRec} as const)\nexport const setRecPassErrorAC = (recPassError: boolean) => ({\n    type: \"RECOVERY/SET-REC-PASS-ERROR\",\n    recPassError\n} as const)\n\nexport const recPassTC = (email: string, from: string, message: string) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setLoaderAC(true))\n        api.emailUser(email, from, message)\n            .then()\n            .finally(() => dispatch(setLoaderAC(false)))\n    }\n}\nexport const newPassTC = (password: string, resetPasswordToken: string | undefined) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setLoaderAC(true))\n        api.resetUser(password, resetPasswordToken)\n            .then(() => dispatch(isPassRecAC(true)))\n            .catch(() => dispatch(setRecPassErrorAC(true)))\n            .finally(() => {\n                    dispatch(setLoaderAC(false))\n                    dispatch(isPassRecAC(false))\n                }\n            )\n    }\n}\n\n\ntype RecPassStateType = typeof initialState\ntype ActionsType =\n    | ReturnType<typeof recPassAC>\n    | ReturnType<typeof isPassRecAC>\n    | ReturnType<typeof setRecPassErrorAC>","import React from 'react';\nimport {useFormik} from 'formik';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {recPassTC, setRecPassErrorAC} from \"../../../../redux/recoveryPassword-reducer\";\nimport {AuthFormikType} from \"../../Authorization/AuthorizationForm/AuthorizationForm\";\nimport {AppRootStateType} from \"../../../../redux/store\";\nimport \"./RecoveryPasswordForm.css\"\nimport {Loader} from \"../../../Loader/Loader\";\n\nexport const RecoveryPasswordForm = () => {\n    const dispatch = useDispatch()\n    const from = useSelector<AppRootStateType, string>(state => state.recoveryPassword.from)\n    const message = useSelector<AppRootStateType, string>(state => state.recoveryPassword.message)\n    const recPassError = useSelector<AppRootStateType, boolean>(state => state.recoveryPassword.recPassError)\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.app.isLoading)\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            token: '',\n        },\n        validate: (values) => {\n            const errors: AuthFormikType = {};\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n            }\n            return errors;\n        },\n        onSubmit: values => {\n            dispatch(recPassTC(values.email, from, message))\n        },\n    });\n\n    return (\n        <div className=\"recoveryPasswordFormContainer\">\n            <form onSubmit={formik.handleSubmit}>\n                <label htmlFor={'email'}><b>Forgot your password?</b></label>\n                <input\n                    type=\"email\"\n                    placeholder=\"Type your Email\"\n                    {...formik.getFieldProps('email')}\n                    onFocus={() => dispatch(setRecPassErrorAC(false))}\n                    className=\"recPassInput\"\n                    autoFocus\n                />\n                {formik.errors.email && formik.touched.email\n                    ? <div style={{color: 'red'}}>{formik.errors.email}</div>\n                    : null\n                }\n                {isLoading && <Loader/>}\n                <button type=\"submit\" className={'recPassBtn'} disabled={isLoading}>Send instruction</button>\n            </form>\n            {recPassError && <h3 className={'recPassError'}>SOMETHING GOING WRONG</h3>}\n        </div>\n    );\n};","import {RecoveryPasswordForm} from \"./RecoveryPasswordForm/RecoveryPasswordForm\";\nimport \"./RecoveryPassword.css\"\n\n\nexport function RecoveryPassword() {\n    return (\n        <div className={\"recoveryPasswordContainer\"}>\n            <RecoveryPasswordForm/>\n        </div>\n    )\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {useParams} from \"react-router-dom\";\nimport {useFormik} from \"formik\";\nimport {newPassTC} from \"../../../../redux/recoveryPassword-reducer\";\nimport React from \"react\";\nimport {AuthFormikType} from \"../../Authorization/AuthorizationForm/AuthorizationForm\";\nimport \"./NewPasswordForm.css\";\nimport {Loader} from \"../../../Loader/Loader\";\nimport {AppRootStateType} from \"../../../../redux/store\";\n\nexport const NewPasswordForm = () => {\n    const dispatch = useDispatch()\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.app.isLoading)\n\n    const params = useParams()\n    const serverToken = params.serverToken\n\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n            token: '',\n        },\n        validate: (values) => {\n            const errors: AuthFormikType = {};\n            if (values.password.length <= 7) {\n                errors.password = 'Password should contain more than 7 symbols';\n            }\n            return errors;\n        },\n        onSubmit: values => {\n            dispatch(newPassTC(values.password, serverToken))\n        },\n    });\n\n    return (\n        <div className={\"newPassFormContainer\"}>\n            <form onSubmit={formik.handleSubmit}>\n                <label htmlFor={\"password\"}><b>Create new password</b></label>\n                <input\n                    type=\"password\"\n                    placeholder=\"Enter your Password\"\n                    {...formik.getFieldProps('password')}\n                    className={\"newPassInput\"}\n                    autoFocus\n                />\n                {formik.errors.password && formik.touched.password\n                    ? <span style={{color: 'red'}}>{formik.errors.password}</span>\n                    : null\n                }\n                {isLoading && <Loader/>}\n                <button type=\"submit\" className={'newPassBtn'} disabled={isLoading}>Create new password</button>\n\n            </form>\n        </div>\n    );\n}","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../redux/store\";\nimport {Navigate} from \"react-router-dom\";\nimport {NewPasswordForm} from \"./NewPasswordForm/NewPasswordForm\";\nimport \"./NewPassword.css\"\n\nexport const NewPassword = () => {\n\n    const isPassRec = useSelector<AppRootStateType, boolean>(state => state.recoveryPassword.isPasRec)\n\n    if (isPassRec) {\n        return <Navigate to={'/auth'}/>\n    }\n\n    return (\n        <div className={'newPasswordContainer'}>\n            <NewPasswordForm/>\n        </div>\n    )\n}","import {Dispatch} from 'redux';\n\nconst initialState = {\n    packName: '',\n    min: 1,\n    max: 1000,\n    sortPacks: {\n        firstNumber: 0,\n        secondDescription: ''\n    },\n    page: 1,\n    pageCount: 20,\n    totalCountPage: 0\n};\n\nexport const packsFilterReducer = (state: PacksFilterReducerStateType = initialState, action: ActionsType): PacksFilterReducerStateType => {\n    switch (action.type) {\n        case 'PACK-FILTER/SET-PACKNAME': {\n            return {...state, packName: action.packName};\n        }\n        case 'PACK-FILTER/SET-MINCARDS': {\n            return {...state, min: action.minCards};\n        }\n        case 'PACK-FILTER/SET-MAXCARDS': {\n            return {...state, max: action.maxCards};\n        }\n        case 'PACK-FILTER/SET-FIRST-NUMBER-SORT': {\n            return {...state, sortPacks: {...state.sortPacks, firstNumber: action.firstNumber}};\n        }\n        case 'PACK-FILTER/SET-SECOND-DESCRIPTION-SORT': {\n            return {...state, sortPacks: {...state.sortPacks, secondDescription: action.secondDescription}};\n        }\n        case 'PACK-FILTER/SET-PAGE': {\n            return {...state, page: action.page};\n        }\n        case 'PACK-FILTER/SET-PAGE-COUNT': {\n            return {...state, pageCount: action.pageCount};\n        }\n        case 'PACK-FILTER/SET-TOTAL-COUNT-PAGE': {\n            return {...state, totalCountPage: action.totalCountPage};\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const setPackName = (packName: string) => {\n    return {\n        type: 'PACK-FILTER/SET-PACKNAME',\n        packName\n    } as const;\n};\nexport const setMinCardsInPack = (minCards: number) => {\n    return {\n        type: 'PACK-FILTER/SET-MINCARDS',\n        minCards\n    } as const;\n};\nexport const setMaxCardsInPack = (maxCards: number) => {\n    return {\n        type: 'PACK-FILTER/SET-MAXCARDS',\n        maxCards\n    } as const;\n};\nexport const setFirstNumberSort = (firstNumber: number) => {\n    return {\n        type: 'PACK-FILTER/SET-FIRST-NUMBER-SORT',\n        firstNumber\n    } as const;\n};\nexport const setSecondDescriptionSort = (secondDescription: string) => {\n    return {\n        type: 'PACK-FILTER/SET-SECOND-DESCRIPTION-SORT',\n        secondDescription\n    } as const;\n};\nexport const setPage = (page: number) => {\n    return {\n        type: 'PACK-FILTER/SET-PAGE',\n        page\n    } as const;\n};\nexport const setPageCount = (pageCount: number) => {\n    return {\n        type: 'PACK-FILTER/SET-PAGE-COUNT',\n        pageCount\n    } as const;\n};\nexport const setTotalCountPage = (totalCountPage: number) => {\n    return {\n        type: 'PACK-FILTER/SET-TOTAL-COUNT-PAGE',\n        totalCountPage\n    } as const;\n};\n\n\nexport const loginTC = () => {\n    return (dispatch: Dispatch) => {\n    };\n};\n\nexport type PacksFilterReducerStateType = typeof initialState\ntype ActionsType = ReturnType<typeof setPackName>\n    | ReturnType<typeof setMinCardsInPack>\n    | ReturnType<typeof setMaxCardsInPack>\n    | ReturnType<typeof setFirstNumberSort>\n    | ReturnType<typeof setSecondDescriptionSort>\n    | ReturnType<typeof setPage>\n    | ReturnType<typeof setPageCount>\n    | ReturnType<typeof setTotalCountPage>\n\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {setFirstNumberSort} from '../../../redux/Packs/packs-filter-reducer';\n\nexport type IncreaseDecreaseFilterType = {\n    direction: number\n    buttonDescription: string\n}\n\nexport const IncreaseDecreaseFilter = (props: IncreaseDecreaseFilterType) => {\n\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            <button\n                onClick={() => dispatch(setFirstNumberSort(props.direction))}>{props.buttonDescription}\n            </button>\n        </div>\n    );\n};","import React from 'react';\nimport {IncreaseDecreaseFilter} from './IncreaseDecreaseFilter';\n\n\nexport const IncreaseDecreaseFilterContainer = () => {\n\n    return (\n        <div>\n            <IncreaseDecreaseFilter direction={1} buttonDescription={'decrease'}/>\n            <IncreaseDecreaseFilter direction={0} buttonDescription={'increase'}/>\n        </div>\n    );\n};","import {ITableModel} from './CardPacksTable';\nimport {IncreaseDecreaseFilterContainer} from '../../FilterComponents/IncreaseDecriase/IncreaseDecreaseFilterContainer';\nimport React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {setSecondDescriptionSort} from '../../../redux/Packs/packs-filter-reducer';\n\nexport const CardPacksTableBody = (): ITableModel[] => {\n    const dispatch = useDispatch();\n    return ([\n            {\n                title: (i: number) => (\n                    <div key={i} style={{width: '100%', display: 'flex'}}>\n                        <div>cardPacksName</div>\n                    </div>\n                ),\n                render: (d, i: number) => (\n                    <div key={i} style={{width: '100%'}}>{d.name}</div>\n                ),\n            },\n            {\n                title: (i: number) => (\n                    <div key={i} style={{width: '100%', display: 'flex'}}>\n                        <div>cardsCount</div>\n                    </div>\n                ),\n                render: (d, i: number) => (\n                    <div key={i} style={{width: '100%'}}>{d.cardsCount}</div>\n                ),\n            },\n            {\n                title: (i: number) => (\n                    <div key={i} style={{width: '100%', display: 'flex'}}>\n                        <div\n                            onClick={(e) => dispatch(setSecondDescriptionSort(((e.target as HTMLElement).innerText)))}>updated\n                        </div>\n                        <IncreaseDecreaseFilterContainer/>\n                    </div>\n                ),\n                render: (d, i: number) => (\n                    <div key={i} style={{width: '100%'}}>{d.updated}</div>\n                ),\n            },\n            {\n                title: (i: number) => (\n                    <div key={i} style={{width: '100%', display: 'flex'}}>\n                        <div\n                            onClick={(e) => dispatch(setSecondDescriptionSort(((e.target as HTMLElement).innerText)))}>name\n                        </div>\n                        <IncreaseDecreaseFilterContainer/>\n                    </div>\n                ),\n                render: (d, i: number) => (\n                    <div key={i} style={{width: '100%'}}>{d.user_name}</div>\n                ),\n            },\n        ]\n    );\n};\n\n","import React, {ChangeEvent} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {setPageCount} from '../../../redux/Packs/packs-filter-reducer';\nimport s from './SelectForPagination.module.css';\n\nexport const SelectForPaginator = () => {\n\n    const dispatch = useDispatch();\n\n    const dispatchPageSize = (e: ChangeEvent<HTMLSelectElement>) => {\n        dispatch(setPageCount(+e.currentTarget.value));\n    }\n\n    return (\n        <div className={s.selectContainer}>\n            <select onChange={dispatchPageSize}>\n                <option>3</option>\n                <option>5</option>\n                <option>10</option>\n                <option selected>20</option>\n                <option>50</option>\n                <option>100</option>\n            </select>\n        </div>\n    );\n};\n","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppRootStateType} from '../../../redux/store';\nimport {PacksFilterReducerStateType, setPage} from '../../../redux/Packs/packs-filter-reducer';\nimport s from './Paginator.module.css';\nimport {SelectForPaginator} from './SelectForPagination';\n\nexport const Paginator = () => {\n\n    const dispatch = useDispatch();\n    // data from selector\n    const objForPagination = useSelector<AppRootStateType, PacksFilterReducerStateType>(state => state.packFilter);\n    let pageCountPagination = Math.ceil(objForPagination.totalCountPage / objForPagination.pageCount)\n    let pageCountPaginationArray = []\n    for (let i = 1; i <= pageCountPagination; i++) {\n        pageCountPaginationArray.push(i);\n    }\n    return (\n        <div className={s.container}>\n            <div className={s.pages}>\n                {pageCountPaginationArray.map((page, index) => <span\n                    key={index}\n                    className={objForPagination.page === page ? s.currentPage : s.page}\n                    onClick={() => dispatch(setPage(page))}>{page}</span>)}\n            </div>\n            <SelectForPaginator/>\n        </div>\n    );\n};\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {setPackName} from '../../../redux/Packs/packs-filter-reducer';\n\nexport const AddItemForm = React.memo(() => {\n    const dispatch = useDispatch();\n\n\n    // error not used yet\n    let [title, setTitle] = useState<string>('');\n    let [error, setError] = useState<string | null>(null);\n\n    const addTitle = () => {\n        if (title.trim()) {\n            dispatch(setPackName(title.trim().replace(/\\s+/g, ' ')));\n            setTitle('');\n        } else {\n            setError('Title is required');\n        }\n    };\n\n    const clearTitle = () => {\n        dispatch(setPackName(''));\n        setTitle('');\n    }\n\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.currentTarget.value);\n        setError(null);\n    };\n\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.charCode === 13) {\n            addTitle();\n        }\n    };\n\n    return (\n        <div>\n            <input\n                className={error ? 'error' : ''}\n                value={title}\n                onKeyPress={onKeyPressHandler}\n                onChange={changeHandler}\n            />\n\n            <button onClick={addTitle}> Set filter</button>\n            <button onClick={clearTitle}>Clear filter</button>\n\n            {/*{error && <div className={'error-message'}>Title is required</div>}*/}\n        </div>\n    );\n});","import React, {useState} from 'react';\nimport {Range} from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport s from './RangeFilter.module.css';\nimport {useDispatch} from 'react-redux';\nimport {setMaxCardsInPack, setMinCardsInPack} from '../../../redux/Packs/packs-filter-reducer';\n\n\nexport const RangeFilter = () => {\n    // let maxValueFixed\n    // useEffect(() => {\n    //     maxValueFixed = maxCards\n    // })\n\n    // const minCards = useSelector<AppRootStateType, number>(state => state.packFilter.min)\n    // const maxCards = useSelector<AppRootStateType, number>(state => state.packFilter.max)\n    const dispatch = useDispatch()\n\n    const [value1, setValue1] = useState(0);\n    const [value2, setValue2] = useState(200);\n\n    const onChangeRangeValue = (values: number[]) => {\n        setValue1(values[0]);\n        setValue2(values[1]);\n    };\n\n    const addRangeFilter = () => {\n        dispatch(setMinCardsInPack(value1))\n        dispatch(setMaxCardsInPack(value2))\n    }\n\n    return (\n        <div className={s.rangeContainer}>\n            <span>{value1}</span>\n            <Range\n                min={0}\n                max={200}\n                onChange={onChangeRangeValue}\n                value={[value1, value2]}\n                allowCross={false}/>\n            <span>{value2}</span>\n            <button onClick={addRangeFilter}>Search</button>\n        </div>\n    );\n};\n\n","import {Dispatch} from 'redux';\nimport {api, CardPacksResType} from '../api/api';\nimport {AppRootStateType} from './store';\nimport {setTotalCountPage} from './Packs/packs-filter-reducer';\n\nconst initialState = {\n    cardPacks: [{\n        _id: '',\n        user_id: '',\n        name: '',\n        cardsCount: 0,\n        created: '',\n        updated: '',\n        user_name: '',\n    }],\n    cardPacksTotalCount: 0,\n    maxCardsCount: 0,\n    minCardsCount: 0,\n    page: 1,\n    pageCount: 15,\n};\n\nexport const cardPacksReducer = (state: CardPacksResType = initialState, action: CardPacksActionTypes): CardPacksResType => {\n    switch (action.type) {\n        case 'GET-CARD-PACKS': {\n            return {...state, ...action.data};\n        }\n        case 'CURRENT-CARD-PACKS': {\n            return {...state, ...action.data};\n        }\n        case 'DELETE-CARD-PACKS': {\n            return {...state, cardPacks: state.cardPacks.filter(cardPack => cardPack._id !== action.id)};\n        }\n        case 'UPDATE-CARD-PACKS': {\n            return {...state, ...action.data};\n        }\n        default:\n            return state;\n    }\n};\n\nexport const getCardPacksAC = (data: CardPacksResType) =>\n    ({type: 'GET-CARD-PACKS', data} as const);\nexport const createCardPacksAC = (data: CardPacksResType) =>\n    ({type: 'CURRENT-CARD-PACKS', data} as const);\nexport const deleteCardPacksAC = (id: string) =>\n    ({type: 'DELETE-CARD-PACKS', id} as const);\nexport const updateCardPacksAC = (data: CardPacksResType) =>\n    ({type: 'UPDATE-CARD-PACKS', data} as const);\n\n\nexport const getCardPacksTC = () => {\n    return (dispatch: Dispatch, getState: () => AppRootStateType) => {\n        const {packName, min, max, page, pageCount} = getState().packFilter\n        const {firstNumber, secondDescription} = getState().packFilter.sortPacks\n        const sortPacks = firstNumber + secondDescription\n        console.log(sortPacks);\n        api.getCardPacks(packName, min, max, page, pageCount, sortPacks)\n            .then(res => {\n                console.dir(res);\n                dispatch(getCardPacksAC(res.data));\n                dispatch(setTotalCountPage(res.data.cardPacksTotalCount));\n            })\n            .catch(e => {\n                console.log('Error');\n            });\n    };\n};\nexport const addCardPacksTC = (name: string) => {\n    return (dispatch: any) => {\n        api.createCardPacks(name)\n            .then((res) => {\n                // dispatch(createCardPacksAC(res.data))\n                dispatch(getCardPacksTC())\n            })\n            .catch(e => {\n                const error = e.response.data.error\n                console.log('Error: ' + error);\n            });\n    }\n}\nexport const deleteCardPacksTC = (id: string) => {\n    return (dispatch: Dispatch) => {\n        api.deleteCardPacks(id)\n            .then((res) => {\n                dispatch(deleteCardPacksAC(id))\n            })\n            .catch(e => {\n                const error = e.response.data.error\n                console.log('Error: ' + error);\n            });\n    }\n}\n\n\nexport type CardPacksActionTypes =\n    ReturnType<typeof getCardPacksAC> |\n    ReturnType<typeof createCardPacksAC> |\n    ReturnType<typeof deleteCardPacksAC> |\n    ReturnType<typeof updateCardPacksAC>;\n","import {Dispatch} from 'redux';\nimport {api, CardsResType} from '../api/api';\n\nconst initialState = {\n    cards: [{\n        answer: \"\",\n        question: \"\",\n        cardsPack_id: \"\",\n        grade: 0,\n        comments: \"\",\n        created: \"\",\n        updated: \"\",\n        more_id: \"\",\n        rating: 0,\n        shots: 0,\n        type: \"\",\n        user_id: \"\",\n        __v: 0,\n        _id: \"\"\n    }],\n    cardsTotalCount: 0,\n    maxGrade: 0,\n    minGrade: 0,\n    page: 1,\n    pageCount: 0,\n    packUserId: 0,\n    token: \"\",\n    tokenDeathTime: 15\n};\n\nexport const cardsReducer = (state: CardsResType = initialState, action: CardsActionTypes): CardsResType => {\n    switch (action.type) {\n        case 'SET-CARDS': {\n            return {...state, ...action.data};\n        }\n        default:\n            return state;\n    }\n};\n\nexport const setCardsAC = (data: CardsResType) =>\n    ({type: 'SET-CARDS', data} as const);\n\n\nexport const getCardsTC = (id: string | undefined) => {\n    return (dispatch: Dispatch) => {\n        // @ts-ignore\n        api.getCards(id)\n            .then(res => {\n                console.dir(res);\n                dispatch(setCardsAC(res.data));\n            })\n            .catch(e => {\n                // console.log('Error: ' + e.response.data.error || e.message);\n                const error = e.response.data.error\n                    ? e.response.data.error\n                    : (e.message + 'more details in console');\n                console.log('Error: ' + error);\n            });\n    };\n};\n\n\nexport type CardsActionTypes = ReturnType<typeof setCardsAC>;\n","import React, {CSSProperties, ReactNode, useCallback, useState} from 'react';\nimport {addCardPacksTC, deleteCardPacksTC} from \"../../../redux/cardPacks-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../redux/store\";\nimport {CardPackType} from \"../../../api/api\";\nimport {getCardsTC} from \"../../../redux/cards-reducer\";\nimport {NavLink} from \"react-router-dom\";\n\nexport interface ITableModel {\n    title: (index: number) => ReactNode;\n    render: (dataItem: any, modelIndex: number, dataIndex: number) => ReactNode;\n}\n\ninterface ITableProps {\n// loading: boolean;\n// error: string;\n//\n// logoutCallback: () => void;\n\n    model: ITableModel[];\n    data: any;\n\n    headerStyle?: CSSProperties,\n    tableStyle?: CSSProperties,\n    rowsStyle?: CSSProperties,\n    rowStyle?: CSSProperties,\n}\n\nexport const CardPacksTable: React.FC<ITableProps> = (\n    {\n// loading,\n// error,\n//\n// logoutCallback,\n\n        model,\n        // data,\n\n        headerStyle,\n        tableStyle,\n        rowsStyle,\n        rowStyle,\n    }\n) => {\n    const dispatch = useDispatch();\n    const [newNamePacks, setNewNamePacks] = useState<string>('')\n    const data = useSelector<AppRootStateType, CardPackType[]>(state => state.cardPacks.cardPacks);\n\n    const addCardPacks = useCallback((name: string) => {\n        const thunk = addCardPacksTC(name)\n        dispatch(thunk)\n    }, [dispatch])\n\n    const deleteCardPacks = useCallback(function (id: string) {\n        const thunk = deleteCardPacksTC(id)\n        dispatch(thunk)\n    }, [dispatch])\n\n    const watchCardsPacks = (id: string) => {\n        dispatch(getCardsTC(id))\n    }\n\n\n    return (\n        <div\n            style={{\n                margin: '0 10px',\n// minHeight: '80vh',\n                display: 'flex',\n                flexFlow: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                ...tableStyle,\n            }}\n        >\n            table\n            <input type=\"text\" value={newNamePacks} onChange={e => setNewNamePacks(e.currentTarget.value)}/>\n            <button type=\"button\" onClick={() => addCardPacks(newNamePacks)}>\n                add\n            </button>\n            {/*{loading*/}\n            {/*? <div style={{color: 'orange'}}>loading...</div>*/}\n            {/*: error*/}\n            {/*? <div style={{color: 'red'}}>{error}</div>*/}\n            {/*: <div><br/></div>*/}\n            {/*}*/}\n\n            <div\n                style={{\n                    border: '1px solid red',\n                    width: '100%',\n                    display: 'flex',\n                    flexFlow: 'row',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    ...headerStyle,\n                }}\n            >\n                {model.map((m: ITableModel, index: number) => m.title(index))}\n\n            </div>\n\n            <div\n                style={{\n                    border: '1px solid lime',\n                    width: '100%',\n                    ...rowsStyle,\n                }}\n            >\n                {data.map((dataItem: any, dataIndex: number) => (\n                    <div\n                        key={dataItem._id || dataIndex}\n                        style={{\n                            width: '100%',\n                            display: 'flex',\n                            flexFlow: 'row',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            ...rowStyle,\n                        }}\n                    >\n                        {model.map((m, modelIndex) => m.render(dataItem, modelIndex, dataIndex))}\n                        <button type=\"button\" onClick={() => deleteCardPacks(dataItem._id)}>\n                            del\n                        </button>\n                        <button type=\"button\">\n                            update\n                        </button>\n                        <button type=\"button\" onClick={() => watchCardsPacks(dataItem._id)}>\n                            <NavLink to={`/cards/${dataItem._id}`}>Сards</NavLink>\n                        </button>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {CardPackType} from '../../../api/api';\nimport {AppRootStateType} from '../../../redux/store';\nimport {CardPacksTableBody} from './CardPacksTableBody';\nimport {Paginator} from '../../FilterComponents/Pagination/Pagination';\nimport {AddItemForm} from '../../FilterComponents/SearchInput/SearchInput';\nimport {RangeFilter} from '../../FilterComponents/RangeFilter/RangeFilter';\nimport {PacksFilterReducerStateType} from '../../../redux/Packs/packs-filter-reducer';\nimport {getCardPacksTC} from '../../../redux/cardPacks-reducer';\nimport {Loader} from '../../Loader/Loader';\nimport { CardPacksTable } from './CardPacksTable';\n\n\nexport const CardPacks = () => {\n    const dispatch = useDispatch();\n    const data = useSelector<AppRootStateType, CardPackType[]>(state => state.cardPacks.cardPacks);\n    const objForPagination = useSelector<AppRootStateType, PacksFilterReducerStateType>(state => state.packFilter);\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.app.isLoading);\n\n    const {\n        packName,\n        min,\n        max,\n        page,\n        pageCount\n    } = useSelector<AppRootStateType, PacksFilterReducerStateType>(state => state.packFilter);\n    const {\n        firstNumber,\n        secondDescription\n    } = useSelector<AppRootStateType, { firstNumber: number, secondDescription: string }>(state => state.packFilter.sortPacks);\n\n\n    useEffect(() => {\n        dispatch(getCardPacksTC());\n    }, [packName, min, max, page, pageCount, firstNumber, secondDescription, dispatch]);\n\n    return (\n        <div>\n            <AddItemForm/>\n            <RangeFilter/>\n            <CardPacksTable\n                model={CardPacksTableBody()}\n                data={data}/>\n            {isLoading && <Loader/>}\n            <Paginator/>\n\n            <div>{'packName: ' + objForPagination.packName}</div>\n            <div>{'min: ' + objForPagination.min}</div>\n            <div>{'max: ' + objForPagination.max}</div>\n            <div>{'sortPacks.secondDescription: ' + objForPagination.sortPacks.secondDescription}</div>\n            <div>{'sortPacks.firstNumber: ' + objForPagination.sortPacks.firstNumber}</div>\n            <div>{'pageCount: ' + objForPagination.pageCount}</div>\n            <div>{'page: ' + objForPagination.page}</div>\n        </div>\n    );\n};\n","import React, {CSSProperties, ReactNode} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../redux/store\";\nimport {CardType} from \"../../../api/api\";\n\nexport interface ITableModel {\n    title: (index: number) => ReactNode;\n    render: (dataItem: any, modelIndex: number, dataIndex: number) => ReactNode;\n}\n\ninterface ITableProps {\n// loading: boolean;\n// error: string;\n//\n// logoutCallback: () => void;\n\n    model: ITableModel[];\n    data: any;\n\n    headerStyle?: CSSProperties,\n    tableStyle?: CSSProperties,\n    rowsStyle?: CSSProperties,\n    rowStyle?: CSSProperties,\n}\n\nexport const CardsTable: React.FC<ITableProps> = (\n    {\n// loading,\n// error,\n//\n// logoutCallback,\n\n        model,\n        // data,\n\n        headerStyle,\n        tableStyle,\n        rowsStyle,\n        rowStyle,\n    }\n) => {\n    const data = useSelector<AppRootStateType, CardType[]>(state => state.cards.cards);\n\n\n    return (\n        <div\n            style={{\n                margin: '0 10px',\n\n                display: 'flex',\n                flexFlow: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                ...tableStyle,\n            }}\n        >\n            table\n\n\n            <div\n                style={{\n                    border: '1px solid red',\n                    width: '100%',\n                    display: 'flex',\n                    flexFlow: 'row',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    ...headerStyle,\n                }}\n            >\n                {model.map((m: ITableModel, index: number) => m.title(index))}\n\n            </div>\n\n            <div\n                style={{\n                    border: '1px solid lime',\n                    width: '100%',\n                    ...rowsStyle,\n                }}\n            >\n                {data.map((dataItem: any, dataIndex: number) => (\n                    <div\n                        key={dataItem._id || dataIndex}\n                        style={{\n                            width: '100%',\n                            display: 'flex',\n                            flexFlow: 'row',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            ...rowStyle,\n                        }}\n                    >\n                        {model.map((m, modelIndex) => m.render(dataItem, modelIndex, dataIndex))}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {CardType} from '../../../api/api';\nimport {AppRootStateType} from '../../../redux/store';\nimport { CardsTable } from './CardsTable';\nimport {CardsTableBody} from './CardsTableBody';\nimport {getCardsTC} from \"../../../redux/cards-reducer\";\n\n\nexport const Cards = () => {\n    const dispatch = useDispatch()\n    const data = useSelector<AppRootStateType, CardType[]>(state => state.cards.cards);\n    const userId = useSelector<AppRootStateType, string | undefined>(state => state.authorization.data._id)\n\n    useEffect(() => {\n        dispatch(getCardsTC(userId));\n    }, [dispatch, userId]);\n\n    return (\n        <div>\n            <CardsTable model={CardsTableBody()} data={data}/>\n        </div>\n    );\n}","import {ITableModel} from '../CardPacks/CardPacksTable';\n\nexport const CardsTableBody = (): ITableModel[] => [\n    {\n        title: (i: number) => (\n            <div key={i} style={{width: '100%'}}> question </div>\n        ),\n        render: (d, i: number) => (\n            <div key={i} style={{width: '100%'}}>{d.question}</div>\n        ),\n    },\n    {\n        title: (i: number) => (\n            <div key={i} style={{width: '100%'}}> answer </div>\n        ),\n        render: (d, i: number) => (\n            <div key={i} style={{width: '100%'}}>{d.answer}</div>\n        ),\n    },\n    {\n        title: (i: number) => (\n            <div key={i} style={{width: '100%'}}> Grade </div>\n        ),\n        render: (d, i: number) => (\n            <div key={i} style={{width: '100%'}}>{d.grade}</div>\n        ),\n    },\n    {\n        title: (i: number) => (\n            <div key={i} style={{width: '100%'}}> updated </div>\n        ),\n        render: (d, i: number) => (\n            <div key={i} style={{width: '100%'}}>{d.updated}</div>\n        ),\n    },\n    {\n        title: (i: number) => (\n            <div key={i} style={{width: '100%'}}> url </div>\n        ),\n        render: (d, i: number) => (\n            <div key={i} style={{width: '100%'}}></div>\n        ),\n    },\n];\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Authorization} from \"./components/Main/Authorization/Authorization\";\nimport {Registration} from \"./components/Main/Registration/Registration\";\nimport {Profile} from \"./components/Main/Profile/Profile\";\nimport {PageNotFound} from \"./components/Main/PageNotFound/PageNotFound\";\nimport {RecoveryPassword} from \"./components/Main/RecoveryPassword/RecoveryPassword\";\nimport {NewPassword} from \"./components/Main/NewPassword/NewPassword\";\nimport {Navigate, Route, Routes} from \"react-router-dom\";\nimport {CardPacks} from \"./components/Main/CardPacks/CardPacks\";\nimport {Cards} from \"./components/Main/Cards/Cards\";\nimport {LoginDataType} from \"./api/api\";\nimport {isAuthorizedTC} from \"./redux/authorization-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./redux/store\";\n\nfunction App() {\n    const authData = useSelector<AppRootStateType, LoginDataType>(state => state.authorization.data);\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.authorization.isLoggedIn);\n    const dispatch = useDispatch()\n\n    const isAuthDataEmpty = (authData: LoginDataType) => {\n        for (let key in authData) {\n            // если тело цикла начнет выполняться - значит в объекте есть свойства\n            return false;\n        }\n        return true;\n    }\n    if (isAuthDataEmpty(authData)) {\n        dispatch(isAuthorizedTC())\n    }\n\n\n    return (\n        <div className=\"App\">\n            <Header/>\n            <div>\n                <Routes>\n                    <Route path={'*'} element={<PageNotFound/>}></Route>\n                    <Route path={'/auth'} element={!isLoggedIn ? <Authorization/> : <Navigate to={'/'}/>}></Route>\n                    <Route path={'/signup'} element={!isLoggedIn ? <Registration/> : <Navigate to={'/'}/>}></Route>\n                    <Route path={'/'} element={isLoggedIn ? <Profile/> : <Navigate to={'/auth'}/>}></Route>\n                    <Route path={'/password-recovery'} element={<RecoveryPassword/>}></Route>\n                    <Route path={'/new-password/:serverToken'} element={<NewPassword/>}></Route>\n                    <Route path={'/cards/:cardPackId'} element={isLoggedIn ?<Cards/> : <Navigate to={'/auth'}/>}></Route>\n                    <Route path={'/packs'} element={isLoggedIn ? <CardPacks/> : <Navigate to={'/auth'}/>}></Route>\n                </Routes>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {}\n\nexport const profileReducer = (state: ProfileStateType = initialState, action: ActionsType): ProfileStateType => {\n    switch (action.type) {\n        case \"\": {\n            return state\n        }\n        default: {\n            return state\n        }\n    }\n}\n\ntype ProfileStateType = typeof initialState\ntype ActionsType = any\n","import {authorizationReducer} from \"./authorization-reducer\";\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {profileReducer} from \"./profile-reducer\";\nimport {recoveryPasswordReducer} from \"./recoveryPassword-reducer\";\nimport {registrationReducer} from \"./registration-reducer\";\nimport {cardPacksReducer} from \"./cardPacks-reducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport {appReducer} from \"./app-reducer\";\nimport {packsFilterReducer} from './Packs/packs-filter-reducer';\nimport {cardsReducer} from \"./cards-reducer\";\n\nconst rootReducer = combineReducers({\n    app: appReducer,\n    authorization: authorizationReducer,\n    profile: profileReducer,\n    recoveryPassword: recoveryPasswordReducer,\n    registration: registrationReducer,\n    cardPacks: cardPacksReducer,\n    cards: cardsReducer,\n    packFilter: packsFilterReducer,\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\nexport type AppDispatch = typeof store.dispatch\n\n// @ts-ignore\nwindow.store = store.getState();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from './redux/store';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Paginator_container__3IVD4\",\"pages\":\"Paginator_pages__2EKym\",\"page\":\"Paginator_page__2gTha\",\"currentPage\":\"Paginator_currentPage__8_Mye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectContainer\":\"SelectForPagination_selectContainer__3vnUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rangeContainer\":\"RangeFilter_rangeContainer__2HhJu\"};"],"sourceRoot":""}